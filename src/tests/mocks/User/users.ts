import { AccountSettings } from '@Entities/AccountSettings.entity';
import { JWTToken } from '@Entities/JWTToken.entity';
import { OTPCode } from '@Entities/OTPCode.entity';
import { PasswordResetToken } from '@Entities/PasswordResetToken.entity';
import { User } from '@Entities/User.entity';
import { plainToInstance } from 'class-transformer';

export const users: User[] = [
	plainToInstance(User, <User>{
		id: 'f46845d7-90af-4c29-8e1a-227c90b33852',
		about: null,
		avatarUrl: null,
		createdAt: '2024-02-28 17:00:00',
		email: 'tony@mail.com',
		firstName: 'Tony',
		isActivated: false,
		lastName: 'Stark',
		nickname: 't.stark',
		password: 'qwertyA1',
		updatedAt: '2024-02-28 17:00:00',
		accountSettings: plainToInstance(AccountSettings, {
			id: '1',
			createdAt: '2024-02-28 17:00:00',
			enterIsSend: false,
			notification: false,
			twoStepVerification: true,
			updatedAt: '2024-02-28 17:00:00',
		}),
		JWTToken: plainToInstance(JWTToken, <JWTToken>{
			id: '1',
			createdAt: '2024-02-28 17:00:00',
			token: 'jwt-token-1',
			updatedAt: '2024-02-28 17:00:00',
		}),
		OTPCode: plainToInstance(OTPCode, <OTPCode>{
			id: '1662043c-4d4b-4424-ac31-45189dedd099',
			code: 111111,
			createdAt: '2024-02-28 17:00:00',
			expiresAt: '2023-11-24 18:30:00',
			updatedAt: '2024-02-28 17:00:00',
		}),
		passwordResetToken: plainToInstance(PasswordResetToken, <PasswordResetToken>{
			id: '1',
			createdAt: '2024-02-28 17:00:00',
			token: 'password-reset-token-1',
			expiresAt: '2024-02-12 16:00:00',
			updatedAt: '2024-02-28 17:00:00',
		}),
		directChats: [],
		groupChats: [],
		blockedUsers: [],
	}),

	plainToInstance(User, <User>{
		id: 'f46845d7-90af-4c29-8e1a-221c90b33852',
		about: 'Thor - the strongest avenger',
		avatarUrl: null,
		createdAt: '2024-02-28 17:00:00',
		email: 'thor@mail.com',
		firstName: 'Thor',
		isActivated: false,
		lastName: 'Odinson',
		nickname: 't.odinson',
		password: 'qwertyA1',
		updatedAt: '2024-02-28 17:00:00',
		accountSettings: plainToInstance(AccountSettings, {
			id: '2',
			createdAt: '2024-02-28 17:00:00',
			enterIsSend: false,
			notification: true,
			twoStepVerification: false,
			updatedAt: '2024-02-28 17:00:00',
		}),
		JWTToken: plainToInstance(JWTToken, <JWTToken>{
			id: '2',
			createdAt: '2024-02-28 17:00:00',
			token: 'jwt-token-2',
			updatedAt: '2024-02-28 17:00:00',
		}),
		OTPCode: {} as OTPCode,
		passwordResetToken: plainToInstance(PasswordResetToken, <PasswordResetToken>{
			id: '2',
			createdAt: '2024-02-28 17:00:00',
			token: 'password-reset-token-2',
			expiresAt: '2024-02-10 16:00:00',
			updatedAt: '2024-02-28 17:00:00',
		}),
		directChats: [],
		groupChats: [],
		blockedUsers: [],
	}),

	plainToInstance(User, <User>{
		id: 'f42845d7-90af-4c29-8e1a-227c90b33852',
		about: null,
		avatarUrl: null,
		createdAt: '2024-02-28 17:00:00',
		email: 'steven@mail.com',
		firstName: 'Steven',
		isActivated: true,
		lastName: 'Rogers',
		nickname: 's.rogers',
		password: 'qwertyA1',
		updatedAt: '2024-02-28 17:00:00',
		accountSettings: plainToInstance(AccountSettings, {
			id: '3',
			createdAt: '2024-02-28 17:00:00',
			enterIsSend: true,
			notification: false,
			twoStepVerification: false,
			updatedAt: '2024-02-28 17:00:00',
		}),
		JWTToken: plainToInstance(JWTToken, <JWTToken>{
			id: '3',
			createdAt: '2024-02-28 17:00:00',
			token: 'jwt-token-3',
			updatedAt: '2024-02-28 17:00:00',
		}),
		OTPCode: plainToInstance(OTPCode, <OTPCode>{
			id: '1662043c-4d4b-4424-ac31-55189dedd099',
			code: null,
			createdAt: '2024-02-28 17:00:00',
			expiresAt: null,
			updatedAt: '2024-02-28 17:00:00',
		}),
		passwordResetToken: plainToInstance(PasswordResetToken, <PasswordResetToken>{
			id: '3',
			createdAt: '2024-02-28 17:00:00',
			token: 'password-reset-token-3',
			expiresAt: '2024-02-12 16:00:00',
			updatedAt: '2024-02-28 17:00:00',
		}),
		directChats: [],
		groupChats: [],
		blockedUsers: [],
	}),
];
